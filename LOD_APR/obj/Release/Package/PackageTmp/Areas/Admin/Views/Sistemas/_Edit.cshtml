@model LOD_APR.Areas.Admin.Models.MAE_sistema
<div class="modal inmodal fade @ViewBag.ClsModal" id="modalSistema" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header">
                <center> <h4 class="modal-title">@ViewBag.Titulo </h4></center>
            </div>

            @{string action = ViewBag.Action;}
            @using (Ajax.BeginForm(action, "Sistemas", new AjaxOptions()
            {
                HttpMethod = "POST",
                OnSuccess = "mae_sistemas.saveResult(data,status,xhr);"
            }, new { name = "formDatos", id = "formDatos" }))
            {

                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Activo)
               <input type="hidden" id="action" value="@action" />
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.IdSistema, new { htmlAttributes = new { } })
                                @Html.EditorFor(model => model.IdSistema, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IdSistema, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.NombreSistema, new { htmlAttributes = new { } })
                                @Html.EditorFor(model => model.NombreSistema, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NombreSistema, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Sistema, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Sistema, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sistema, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.DocSize, htmlAttributes: new { })
                                @Html.EditorFor(model => model.DocSize, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DocSize, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.SizeActual, htmlAttributes: new { })
                                @Html.EditorFor(model => model.SizeActual, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SizeActual, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="form-group">


                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Controlador, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Controlador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Controlador, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Accion, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Accion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Accion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">

                            <div class="col-md-3">
                                @Html.LabelFor(model => model.indice, htmlAttributes: new { })
                                @Html.EditorFor(model => model.indice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.indice, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Prioridad, htmlAttributes: new { })
                                @Html.EditorFor(model => model.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Prioridad, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @*Cambio JT 28-12-2019 se cambia el check clasico por el switch*@
                                <center style="margin-top:7px">
                                    <div class="switch">
                                        <label>Activo</label>
                                        <div class="onoffswitch">

                                            @if (Model.Activo)
                                            {
                                                <input checked="checked" class="onoffswitch-checkbox" id="Activo_1" name="Activo_1" type="checkbox">
                                            }
                                            else
                                            {
                                                <input class="onoffswitch-checkbox" id="Activo_1" name="Activo_1" type="checkbox">
                                            }

                                            <label class="onoffswitch-label" for="Activo_1">
                                                <span class="onoffswitch-inner"></span>
                                                <span class="onoffswitch-switch"></span>
                                            </label>

                                        </div>
                                    </div>
                                </center>
                                @*FIN.*@
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Icon, new { htmlAttributes = new { } })
                                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @{
                                SelectList selectListItems = (SelectList)ViewBag.Sistemas;
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.SR1, new { htmlAttributes = new { } })
                                    @Html.DropDownList("SR1", new SelectList(selectListItems, "Value", "Text", null, null, new int[] { Model.SR2, Model.SR3 }, null), null, htmlAttributes: new { })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.SR2, new { htmlAttributes = new { } })
                                    @Html.DropDownList("SR2", new SelectList(selectListItems, "Value", "Text", null, null, new int[] { Model.SR1, Model.SR3 }, null), null, htmlAttributes: new { })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.SR3, new { htmlAttributes = new { } })
                                    @Html.DropDownList("SR3", new SelectList(selectListItems, "Value", "Text", null, null, new int[] { Model.SR2, Model.SR1 }, null), htmlAttributes: new { })
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="btn-group pull-right" role="group" aria-label="...">
                                <button type="submit" id="btnSubmit" class="btn btn-primary ladda-button ladda-button-demo" data-style="zoom-in"><i class="fa fa-upload"></i> Guardar</button>
                                <a href="#" data-dismiss="modal" class="btn btn-default" role="button"><i class="fa fa-ban"></i> Cancelar </a>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
