@model LOD_APR.Areas.Admin.Models.MAE_DireccionesMOP

@using System.Configuration
@{ ViewBag.webKey = Convert.ToString(ConfigurationManager.AppSettings.Get("InternalCaptchaSiteKey")); }
<script>
    grecaptcha.ready(function () {
        grecaptcha.execute('@ViewBag.webKey', { action: '' }).then(function (token) {
            document.getElementById("foo").value = token;
        });
    });
</script>

<div class="modal inmodal fade @ViewBag.ClsModal" id="modalTipo" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header">
                <center><h4 class="modal-title">@ViewBag.Titulo</h4></center>
            </div>
            <div class="modal-body">
                @{string action = ViewBag.Action;}
                @using (Ajax.BeginForm(action, null, new AjaxOptions()
                {
                    HttpMethod = "POST",
                    OnSuccess = "mae_dirmop.saveResult(data,status,xhr);"
                }, new { name = "formTipo", id = "formTipo" }))
                {
    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.IdDireccion)

                        <div class="form-group">
                            <div class="col-md-1"></div>
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.NombreDireccion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NombreDireccion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NombreDireccion, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-1"></div>
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.DescripcionDireccion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DescripcionDireccion, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                            </div>
                            <div class="col-md-1"></div>
                        </div>
                        <hr />
                <input type="hidden" name="foo" id="foo">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="btn-group pull-right">
                                    <button type="submit" class="btn btn-primary"><i class="fa fa-upload"></i> Guardar</button>
                                    <a href="#" data-dismiss="modal" class="btn btn-default"><i class="fa fa-ban"></i> Cancelar </a>
                                </div>
                            </div>
                        </div>
                    </div>}
            </div>
        </div>
    </div>
</div>



<script>

    $('#Tipo').change(function () {
        var texto = $('#Tipo :selected').val();
        if (isNaN(texto)) {
            texto = 0;
        }
        $('#IdTipo').val(texto);
    });

    //$("#first").select2('val');

        @*$('#Tipo').autocomplete({
            source: '@Url.Action("getJsonTipos", "TipoDoc")',
            minLength: 2
        });*@

</script>